<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>